<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>